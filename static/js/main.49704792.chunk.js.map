{"version":3,"sources":["components/Brand/Brand.js","reducer.js","actions.js","components/Aux.js","components/Brand/BrandList.js","components/Card/Card.js","components/RandomImage.js","components/BackBtn/BackBtn.js","components/Model/ModelList.js","components/BgRepeater/BgRepeater.js","components/Gen/Gen.js","components/Mods/Mods.js","components/Body/Body.js","components/Gen/Gens.js","components/App/App.js","index.js"],"names":["Brand","props","className","href","brand","id","logo","alt","name","src","initialState","brands","models","model","reducer","state","action","type","actions","SET_BRANDS","value","SET_BRAND","SET_MODELS","SET_MODEL","API_URL","setBodyClass","document","body","setAttribute","toLowerCase","store","createStore","Actions","getBrands","dispatch","axios","get","then","res","data","getBrand","getModels","brand_id","this","params","getModel","Aux","children","BrandList","search","e","setState","target","length","filter","indexOf","placeholder","onChange","searchChange","bind","map","key","React","Component","connect","Card","title","createElement","getSrcFromObject","object","Array","isArray","Math","floor","random","hasOwnProperty","gens","bodies","images","RandomImage","size","replace","style","backgroundSize","backgroundPosition","backgroundImage","onLoad","imageLoad","display","BackBtn","url","text","ModelList","brands_id","match","closest","classList","add","BgRepeater","image","Gen","gen","backLoad","years","onClick","selectBody","Mods","mods","reduce","prev","next","findIndex","el","engine","gearbox","sort","a","b","mod","drive","accel","consum","Body","modalOpen","body_id","current","concat","find","getBody","Modal","toggle","isOpen","onClosed","onClose","ModalBody","descr","Gens","model_id","parseInt","window","addEventListener","forceUpdate","addUrl","undefined","history","location","pathname","push","nextSibling","closeBody","App","exact","path","component","render","to","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.49704792.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Brand.css'\n\nconst Brand = (props) => {\n    return (\n        <a className=\"brand\" href={`#/brand/${props.brand.id}`}>\n            <h1 className=\"p-3 text-center\">{props.brand.logo &&\n            <img alt={props.brand.name + \" logo\"} className={\"logo\"} src={props.brand.logo}/>}{props.brand.name}</h1>\n        </a>\n    );\n};\n\nBrand.propTypes = {\n    brand: PropTypes.object,\n};\n\nexport default Brand;","import {actions} from './actions'\n\nconst initialState = {\n    brands: [],\n    brand: null,\n    models: [],\n    model: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_BRANDS:\n            return {...state, brands: action.value};\n        case actions.SET_BRAND:\n            return {...state, brand: action.value};\n        case actions.SET_MODELS:\n            return {...state, models: action.value};\n        case actions.SET_MODEL:\n            return {...state, model: action.value};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import axios from 'axios';\nimport {createStore} from \"redux\";\nimport reducer from \"./reducer\";\n\nexport const actions = {\n    SET_BRANDS: 'SET_BRANDS',\n    SET_BRAND: 'SET_BRAND',\n    SET_MODELS: 'SET_MODELS',\n    SET_MODEL: 'SET_MODEL',\n    API_URL: 'https://carcat-3a3fb.web.app'\n};\n\nconst setBodyClass = (name) => {\n    document.body.setAttribute('brand', name.toLowerCase());\n};\n\n\nexport const store = createStore(reducer);\n\nconst Actions = {\n    getBrands() {\n        setBodyClass('');\n        store.dispatch({type: actions.SET_BRANDS, value: []});\n        axios.get(actions.API_URL + '/brand').then(res => {\n            store.dispatch({type: actions.SET_BRANDS, value: res.data});\n        })\n    },\n    getBrand(id) {\n        if (store.brand) return true;\n        store.dispatch({type: actions.SET_BRAND, value: null});\n        axios.get(actions.API_URL + '/brand/' + id).then(res => {\n            const brand = res.data;\n            setBodyClass(brand.name);\n            store.dispatch({type: actions.SET_BRAND, value: res.data});\n        });\n    },\n    getModels(brand_id) {\n        this.getBrand(brand_id);\n        store.dispatch({type: actions.SET_MODELS, value: []});\n        axios.get(actions.API_URL + '/model', {params: {brand_id}}).then(res => {\n            store.dispatch({type: actions.SET_MODELS, value: res.data});\n        })\n    },\n    getModel(id) {\n        if (store.model && store.model.id === id) return true;\n        axios.get(actions.API_URL + `/model/${id}`).then(res => {\n            const model = res.data;\n            this.getBrand(model.brand_id);\n            store.dispatch({type: actions.SET_MODEL, value: model});\n        });\n    }\n};\n\nexport default Actions;\n","const Aux = (props) => props.children;\nexport default Aux;","import React from 'react';\nimport Brand from \"./Brand\";\nimport './brandList.css'\nimport {connect} from \"react-redux\";\nimport Actions from \"../../actions\";\nimport Aux from \"../Aux\";\n\nclass BrandList extends React.Component {\n    state = {\n        search: ''\n    };\n\n    componentDidMount() {\n        Actions.getBrands();\n    }\n\n    searchChange(e) {\n        this.setState({search: e.target.value})\n    }\n\n    render() {\n        let brands = this.props.brands;\n        if (this.state.search.length > 0) brands = brands.filter(brand => brand.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1);\n        return (\n            <Aux>\n                <input className=\"search\" placeholder={'Поиск...'} value={this.state.search}\n                       onChange={this.searchChange.bind(this)}/>\n                <div className=\"row brand-list m-0\">\n                    <div className=\"col-12 p-0\">\n                        {brands.filter(brand => brand.logo).map(brand => <Brand key={brand.id} brand={brand}/>)}\n                        {brands.filter(brand => !brand.logo).map(brand => <Brand key={brand.id} brand={brand}/>)}\n                    </div>\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        brands: state.brands\n    })\n)(BrandList);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Card.scss'\n\nconst Card = (props) => {\n    const title = props.title ? <div className=\"card-title\"><span>{props.title}</span></div> : null;\n    return React.createElement((props.href) ? 'a' : 'div', {\n            href: props.href,\n            className: \"card\"\n        },\n        (<div className=\"card-body\">\n            {props.children}\n            {title}\n        </div>)\n    );\n};\n\nCard.propTypes = {\n    href: PropTypes.string,\n    title: PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport default Card;\n","import React from 'react';\nimport Aux from \"./Aux\";\n\nconst RandomImage = (props) => {\n    const size = props.size || '';\n    const src = getSrcFromObject(props.object).replace('.jpg', `${size}.jpg`);\n    let style = {backgroundSize: 'cover', backgroundPosition: 'center'};\n    if (src) style.backgroundImage = `url(${src})`;\n    return (\n        <Aux>\n            <img onLoad={props.imageLoad} style={{display: 'none'}} src={src} alt={'some car'}/>\n            <div className=\"image img-fluid\" style={style}/>\n        </Aux>\n    )\n};\n\nconst getSrcFromObject = (object) => {\n    if (typeof object === 'string') return object;\n    if (Array.isArray(object)) return getSrcFromObject(object[Math.floor(Math.random() * object.length)]);\n    if (object.hasOwnProperty('gens')) return getSrcFromObject(object.gens);\n    if (object.hasOwnProperty('bodies')) return getSrcFromObject(object.bodies);\n    if (object.hasOwnProperty('images')) return object.images;\n    return null;\n};\n\n\nexport default RandomImage;","import React from 'react';\nimport './BackBtn.css'\n\nconst BackBtn = (props) => <a className=\"back-btn\" href={props.url}>&#8629; {props.text}</a>;\n\nexport default BackBtn;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from \"../Card/Card\";\nimport RandomImage from \"../RandomImage\";\nimport './modelList.css';\nimport Actions from \"../../actions\";\nimport {connect} from \"react-redux\";\nimport BackBtn from \"../BackBtn/BackBtn\";\nimport Aux from \"../Aux\";\n\nclass ModelList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.brands_id = this.props.match.params.brand_id;\n    }\n\n    componentDidMount() {\n        Actions.getModels(this.brands_id)\n    }\n\n    imageLoad(e) {\n        e.target.closest('.fader').classList.add('in')\n    }\n\n    render() {\n        return (\n            <Aux>\n                <BackBtn url={`#/brand`} text={'Брэнды'}/>\n                <div className=\"row model-list justify-content-center\">\n                    {this.props.models.map(model =>\n                        <div key={model.id} className={'col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 p-0 fader'}>\n                            <Card title={model.name} href={`#/model/${model.id}`}>\n                                <RandomImage size={'m'} object={model} imageLoad={this.imageLoad}/>\n                            </Card>\n                        </div>\n                    )}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nModelList.propTypes = {\n    brand_id: PropTypes.number\n};\n\nexport default connect((store) => ({models: store.models}))(ModelList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './BgRepeater.scss'\nimport Aux from \"../Aux\";\n\nconst BgRepeater = (props) => {\n    const style = {backgroundImage: `url(${props.image.replace('.jpg', 'l.jpg')})`};\n    return (\n        <Aux>\n            <img style={{display:'none'}} alt={\"some car\"} src={props.image.replace('.jpg', 'l.jpg')} onLoad={props.imageLoad}/>\n            <div className={\"bg-repeater opac\"} style={style}/>\n        </Aux>\n    );\n};\n\nBgRepeater.propTypes = {\n    image: PropTypes.string\n};\n\nexport default BgRepeater;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Gen.scss'\nimport Card from \"../Card/Card\";\nimport RandomImage from \"../RandomImage\";\nimport BgRepeater from \"../BgRepeater/BgRepeater\";\n\nconst Gen = (props) => {\n    return (\n        <div className=\"row gen m-0 position-relative flex-grow-1\">\n            <BgRepeater image={props.gen.bodies[0].images} imageLoad={props.backLoad}/>\n            <div className=\"col-12 col-lg-2 title\">\n                <div className={\"name\"}>{props.gen.name}</div>\n                <div className={\"years\"}>{props.gen.years}</div>\n            </div>\n            <div className={\"col-12 col-lg-10 p-0 body-list\"}>\n                <div className={\"row m-0\"}>\n                    {props.gen.bodies.map(body =>\n                        <div key={body.id}\n                             className={\"col-12 col-sm-6 col-md-4 p-0 pointer fader\"}\n                             onClick={props.selectBody.bind(null, body.id)}>\n                            <Card\n                                title={body.name}>\n                                <RandomImage imageLoad={props.imageLoad} object={body.images} size=\"l\"/>\n                            </Card>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nGen.propTypes = {\n    model_id: PropTypes.number,\n    gen: PropTypes.object,\n    selectBody: PropTypes.func,\n};\n\nexport default Gen;\n","import React from 'react';\nimport './Mods.scss';\n\nconst Mods = (props) => {\n    return (\n        <table className=\"table table-bordered mods\">\n            <thead>\n            <tr>\n                <th>Двигатель</th>\n                <th>КПП</th>\n                <th className=\"d-none d-sm-table-cell\">Привод</th>\n                <th>Разгон до 100</th>\n                <th className=\"d-none d-sm-table-cell\">Расход</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.mods.reduce((prev, next) => {\n                if (prev.findIndex((el) => el.engine + el.gearbox === next.engine + next.gearbox) === -1) return [...prev, next];\n                else return prev;\n            }, []).sort((a, b) => a.engine < b.engine ? -1 : 1).map(mod =>\n                <tr key={mod.id}>\n                    <td>{mod.engine}</td>\n                    <td>{mod.gearbox}</td>\n                    <td className=\"d-none d-sm-table-cell\">{mod.drive}</td>\n                    <td>{mod.accel}</td>\n                    <td className=\"d-none d-sm-table-cell\">{mod.consum}</td>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    )\n};\n\nexport default Mods;","import React from 'react';\nimport {Modal, ModalBody} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport './Body.scss'\nimport axios from \"axios\";\nimport Mods from \"../Mods/Mods\";\nimport {actions} from \"../../actions\";\n\nclass Body extends React.Component {\n    state = {\n        modalOpen: true,\n        mods: null\n    };\n\n    componentDidMount() {\n        const {body_id} = this.props;\n        axios.get(actions.API_URL + '/mods/', {params: {body_id}}).then(res => {\n            this.setState({\n                ...this.state,\n                mods: res.data\n            });\n        })\n    }\n\n    getBody() {\n        return this.props.model.gens.reduce((prev, current) => prev.concat(current.bodies), []).find(body => body.id === this.props.body_id);\n    }\n\n    toggle() {\n        this.setState({modalOpen: !this.state.modalOpen});\n    }\n\n    render() {\n        const body = this.getBody();\n        return (\n            <Modal toggle={this.toggle.bind(this)}\n                   isOpen={this.state.modalOpen}\n                   onClosed={this.props.onClose}\n                   className=\"modal-lg modal-dialog-centered body-dialog\">\n                <ModalBody>\n                    <div className=\"img-container\">\n                        <img className=\"img-fluid\" src={body.images} alt={body.descr}/>\n                    </div>\n                    <div className=\"description-container\">\n                        <h3>Описание:</h3>\n                        <p>{body.descr}</p>\n                        <div className=\"justify-content-center d-flex\">\n                            <button className=\"btn btn-secondary mb-3\"\n                                    onClick={this.toggle.bind(this)}>Закрыть\n                            </button>\n                        </div>\n                        <h3>Характеристики:</h3>\n                        {this.state.mods && <Mods mods={this.state.mods}/>}\n                    </div>\n                </ModalBody>\n            </Modal>\n        )\n    }\n}\n\nexport default connect(store => ({model: store.model}))(Body);\n","import React from 'react';\nimport Actions from \"../../actions\";\nimport Gen from \"./Gen\";\nimport Aux from \"../Aux\";\nimport {connect} from \"react-redux\";\nimport Body from \"../Body/Body\";\nimport BackBtn from \"../BackBtn/BackBtn\";\n\n\nclass Gens extends React.Component {\n    model_id = this.props.match.params.model_id;\n    state = {\n        body_id: this.props.match.params.body_id ? parseInt(this.props.match.params.body_id, 10) : null\n    };\n\n    componentDidMount() {\n        Actions.getModel(this.model_id);\n        window.addEventListener('resize', () => {\n            this.forceUpdate()\n        });\n    }\n\n    selectBody(body_id) {\n        this.addUrl('/model/' + this.model_id + '/' + body_id);\n        this.setState({body_id: body_id});\n    }\n\n    closeBody() {\n        this.addUrl('/model/' + this.model_id + '/');\n        this.setState({body_id: undefined});\n    }\n\n    addUrl(url) {\n        if (this.props.history.location.pathname !== url) {\n            this.props.history.push(url);\n        }\n    }\n\n    imageLoad(e) {\n        e.target.closest('.fader').classList.add('in');\n    }\n\n    backLoad(e) {\n        e.target.nextSibling.classList.add('in');\n    }\n\n    render() {\n        const {brand, model} = this.props;\n\n        return (\n            this.props.model &&\n            <Aux>\n                {brand && <BackBtn url={`#/brand/` + brand.id} text={brand.name}/>}\n                {model.id === parseInt(this.model_id, 10) &&\n                    model.gens.sort((a, b) => a.years < b.years ? -1 : 1).map(gen => <Gen\n                    imageLoad={this.imageLoad}\n                    backLoad={this.backLoad}\n                    model_id={model.id}\n                    selectBody={this.selectBody.bind(this)}\n                    key={gen.id}\n                    gen={gen}/>)}\n                {model && this.state.body_id &&\n                <Body body_id={this.state.body_id} onClose={this.closeBody.bind(this)}/>}\n            </Aux>\n        )\n    }\n}\n\nexport default connect(store => ({model: store.model, brand: store.brand}))(Gens);\n","import React, {Component} from 'react';\nimport './App.css';\nimport BrandList from '../Brand/BrandList'\nimport {Provider} from \"react-redux\";\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport ModelList from \"../Model/ModelList\";\nimport Gens from \"../Gen/Gens\";\nimport {store} from '../../actions';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <HashRouter>\n                    <div className=\"container-fluid main-container\">\n                        <Switch>\n                            <Route exact path='/model/:model_id/:body_id?' component={Gens}/>\n                            <Route exact path='/brand/:brand_id' component={ModelList}/>\n                            <Route exact path='/brand' component={BrandList}/>\n                            <Route path=\"*\" render={() => (<Redirect to=\"/brand\"/>)}/>\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './css/audi.scss';\nimport './css/bmw.scss';\nimport './css/mercedes-benz.scss';\nimport App from './components/App/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}